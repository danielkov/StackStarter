{"version":3,"file":"static/development/pages/api.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptors.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./pages/api/index.ts","webpack:///./prisma/context.ts","webpack:///./prisma/permissions/index.ts","webpack:///./prisma/schema.ts","webpack:///./prisma/server.ts","webpack:///./prisma/types/AuthPayload.ts","webpack:///./prisma/types/Mutation.ts","webpack:///./prisma/types/Post.ts","webpack:///./prisma/types/Query.ts","webpack:///./prisma/types/User.ts","webpack:///./prisma/types/index.ts","webpack:///./prisma/utils.ts","webpack:///external \"@prisma/photon\"","webpack:///external \"apollo-server-micro\"","webpack:///external \"bcryptjs\"","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptors\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"graphql-middleware\"","webpack:///external \"graphql-shield\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"nexus\"","webpack:///external \"nexus-prisma\"","webpack:///external \"path\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import apolloServer from '../../prisma/server';\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n};\n\nexport default apolloServer.createHandler({ path: '/api' });\n","import { Photon } from '@prisma/photon';\nimport { ServerResponse } from 'http';\nimport { MicroRequest } from 'apollo-server-micro/dist/types';\n\nconst photon = new Photon();\n\nexport interface Context {\n  photon: Photon;\n  req: MicroRequest;\n  res: ServerResponse;\n}\n\nconst createContext = (request: {\n  req: MicroRequest;\n  res: ServerResponse;\n}): Context => ({\n  ...request,\n  photon,\n});\n\nexport default createContext;\n","import { rule, shield } from 'graphql-shield';\n\nimport { getUserId } from '../utils';\n\nconst rules = {\n  isAuthenticatedUser: rule()((parent, args, context) => {\n    const userId = getUserId(context);\n    return Boolean(userId);\n  }),\n  isPostOwner: rule()(async (parent, { id }, context) => {\n    const userId = getUserId(context);\n    const author = await context.photon.posts\n      .findOne({\n        where: {\n          id,\n        },\n      })\n      .author();\n    return userId === author.id;\n  }),\n};\n\nconst permissions = shield({\n  Query: {\n    me: rules.isAuthenticatedUser,\n    filterPosts: rules.isAuthenticatedUser,\n    post: rules.isAuthenticatedUser,\n  },\n  Mutation: {\n    createDraft: rules.isAuthenticatedUser,\n    deletePost: rules.isPostOwner,\n    publish: rules.isPostOwner,\n  },\n});\n\nexport default permissions;\n","import { nexusPrismaPlugin } from 'nexus-prisma';\nimport { makeSchema } from 'nexus';\nimport { join } from 'path';\n\nimport * as types from './types';\n\nconst schema = makeSchema({\n  types,\n  plugins: [nexusPrismaPlugin()],\n  outputs: {\n    schema: join(__dirname, '/generated/schema.graphql'),\n    typegen: join(__dirname, '/generated/nexus.ts'),\n  },\n  typegenAutoConfig: {\n    sources: [\n      {\n        source: '@prisma/photon',\n        alias: 'photon',\n      },\n      {\n        source: require.resolve('./context'),\n        alias: 'Context',\n      },\n    ],\n    contextType: 'Context.Context',\n  },\n});\n\nexport default schema;\n","import { ApolloServer } from 'apollo-server-micro';\nimport { applyMiddleware } from 'graphql-middleware';\n\nimport permissions from './permissions';\nimport schema from './schema';\nimport createContext from './context';\n\nconst apolloServer = new ApolloServer({\n  schema: applyMiddleware(schema, permissions),\n  context: createContext,\n});\n\nexport default apolloServer;\n","import { objectType } from 'nexus';\n\nconst AuthPayload = objectType({\n  name: 'AuthPayload',\n  definition(t) {\n    t.string('token');\n    t.field('user', { type: 'User' });\n  },\n});\n\nexport default AuthPayload;\n","import { compare, hash } from 'bcryptjs';\nimport { sign } from 'jsonwebtoken';\nimport { idArg, mutationType, stringArg } from 'nexus';\nimport { APP_SECRET, getUserId } from '../utils';\n\nconst Mutation = mutationType({\n  definition(t) {\n    t.field('signup', {\n      type: 'AuthPayload',\n      args: {\n        name: stringArg(),\n        email: stringArg({ nullable: false }),\n        password: stringArg({ nullable: false }),\n      },\n      resolve: async (_parent, { name, email, password }, ctx) => {\n        const hashedPassword = await hash(password, 10);\n        const user = await ctx.photon.users.create({\n          data: {\n            name,\n            email,\n            password: hashedPassword,\n          },\n        });\n        return {\n          token: sign({ userId: user.id }, APP_SECRET),\n          user,\n        };\n      },\n    });\n\n    t.field('login', {\n      type: 'AuthPayload',\n      args: {\n        email: stringArg({ nullable: false }),\n        password: stringArg({ nullable: false }),\n      },\n      resolve: async (_parent, { email, password }, context) => {\n        const user = await context.photon.users.findOne({\n          where: {\n            email,\n          },\n        });\n        if (!user) {\n          throw new Error(`No user found for email: ${email}`);\n        }\n        const passwordValid = await compare(password, user.password);\n        if (!passwordValid) {\n          throw new Error('Invalid password');\n        }\n        return {\n          token: sign({ userId: user.id }, APP_SECRET),\n          user,\n        };\n      },\n    });\n\n    t.field('createDraft', {\n      type: 'Post',\n      args: {\n        title: stringArg({ nullable: false }),\n        content: stringArg(),\n      },\n      resolve: (parent, { title, content }, ctx) => {\n        const userId = getUserId(ctx);\n        return ctx.photon.posts.create({\n          data: {\n            title,\n            content,\n            published: false,\n            author: { connect: { id: userId } },\n          },\n        });\n      },\n    });\n\n    t.field('deletePost', {\n      type: 'Post',\n      nullable: true,\n      args: { id: idArg() },\n      resolve: (parent, { id }, ctx) => {\n        return ctx.photon.posts.delete({\n          where: {\n            id,\n          },\n        });\n      },\n    });\n\n    t.field('publish', {\n      type: 'Post',\n      nullable: true,\n      args: { id: idArg() },\n      resolve: (parent, { id }, ctx) => {\n        return ctx.photon.posts.update({\n          where: { id },\n          data: { published: true },\n        });\n      },\n    });\n  },\n});\n\nexport default Mutation;\n","import { objectType } from 'nexus';\n\nconst Post = objectType({\n  name: 'Post',\n  definition(t) {\n    t.model.id();\n    // t.model.createdAt();\n    // t.model.updatedAt();\n    t.model.published();\n    t.model.title();\n    t.model.content();\n    t.model.author();\n  },\n});\n\nexport default Post;\n","import { idArg, queryType, stringArg } from 'nexus';\nimport { getUserId } from '../utils';\n\nconst Query = queryType({\n  definition(t) {\n    t.field('me', {\n      type: 'User',\n      nullable: true,\n      resolve: (parent, args, ctx) => {\n        const userId = getUserId(ctx);\n        return ctx.photon.users.findOne({\n          where: {\n            id: userId,\n          },\n        });\n      },\n    });\n\n    t.list.field('feed', {\n      type: 'Post',\n      resolve: (parent, args, ctx) => {\n        return ctx.photon.posts.findMany({\n          where: { published: true },\n        });\n      },\n    });\n\n    t.list.field('filterPosts', {\n      type: 'Post',\n      args: {\n        searchString: stringArg({ nullable: true }),\n      },\n      resolve: (parent, { searchString }, ctx) => {\n        return ctx.photon.posts.findMany({\n          where: {\n            OR: [\n              {\n                title: {\n                  contains: searchString,\n                },\n              },\n              {\n                content: {\n                  contains: searchString,\n                },\n              },\n            ],\n          },\n        });\n      },\n    });\n\n    t.field('post', {\n      type: 'Post',\n      nullable: true,\n      args: { id: idArg() },\n      resolve: (parent, { id }, ctx) => {\n        return ctx.photon.posts.findOne({\n          where: {\n            id,\n          },\n        });\n      },\n    });\n  },\n});\n\nexport default Query;\n","import { objectType } from 'nexus';\n\nconst User = objectType({\n  name: 'User',\n  definition(t) {\n    t.model.id();\n    t.model.name();\n    t.model.email();\n    t.model.posts({ pagination: false });\n  },\n});\n\nexport default User;\n","export { default as AuthPayload } from './AuthPayload';\nexport { default as Mutation } from './Mutation';\nexport { default as Post } from './Post';\nexport { default as Query } from './Query';\nexport { default as User } from './User';\n","import { verify } from 'jsonwebtoken';\nimport { Context } from './context';\n\nexport const APP_SECRET = 'appsecret321';\n\ninterface Token {\n  userId: string;\n}\n\nexport const getUserId = (context: Context): string | void => {\n  const { authorization } = context.req.headers;\n  if (authorization) {\n    const token = authorization.replace('Bearer ', '');\n    const verifiedToken = verify(token, APP_SECRET) as Token;\n    return verifiedToken && verifiedToken.userId;\n  }\n};\n","module.exports = require(\"@prisma/photon\");","module.exports = require(\"apollo-server-micro\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"graphql-middleware\");","module.exports = require(\"graphql-shield\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"nexus\");","module.exports = require(\"nexus-prisma\");","module.exports = require(\"path\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AADA;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAIA;AACA;AAOA;AAKA;AALA;AACA;AAOA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AADA;AADA;AAMA;AACA;AAfA;AAkBA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAaA;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAXA;AAPA;AAsBA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAQA;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AApBA;AAuBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AADA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAvBA;AA0BA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AAQA;AAhBA;AAmBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AAVA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AATA;AAWA;AACA;AA/FA;AAiGA;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AAVA;AAaA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AANA;AASA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AADA;AADA;AAMA;AACA;AADA;AADA;AAPA;AADA;AAgBA;AAtBA;AAyBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AAVA;AAYA;AACA;AA9DA;AAgEA;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AARA;AAUA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AChBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}